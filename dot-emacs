;;; -*-Emacs-Lisp-*-

;;
;; General stuff ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;



;; This sets up the load path so that we can override it
(package-initialize nil)
;; Override the packages with the git version of Org and other packages
(add-to-list 'load-path "~/.emacs.d")
(add-to-list 'load-path "/usr/share/emacs24/site-lisp/mu4e")
(add-to-list 'load-path "/usr/local/share/emacs/site-lisp")
;; load packages before configuring them
(setq package-archives '(("melpa" . "http://melpa.org/packages/")
			 ("gnu" . "http://elpa.gnu.org/packages/")
			 ("marmalade" . "https://marmalade-repo.org/packages/")))
;; Load the rest of the packages
(package-initialize)
;; (setq package-enable-at-startup nil)

(unless (package-installed-p 'use-package)
  (package-install 'use-package))
(setq use-package-verbose t)
(require 'use-package)
(use-package auto-compile
	     :ensure t
	     :config (auto-compile-on-load-mode))
(setq load-prefer-newer t)

;; load elisp files from home directory as well.
(setq inhibit-startup-message t		;; no startup messages
      inhibit-startup-echo-area-message t
      inhibit-splash-screen t
      disabled-command-hook nil		;; don't irritate me with disabled commands
      tty-suppress-bold-inverse-default-colors t	;; supress bright colors
      scroll-step 1			;; scroll one line at a time
					;; (instead of scrolling half a page)
      transient-mark-mode 't		;; show the marked region
      visible-bell t			;; no audible bell
      next-line-add-newlines nil	;; stop at the end of the file, not just add lines
      require-final-newline t		;; always end a file with a newline
      line-number-mode t		;; show linecolumn number in the modeline
      column-number-mode t
      make-backup-files nil		;; no backups
      auto-save-interval 0
      auto-save-timeout 600
      confirm-kill-emacs 'y-or-n-p)

;;
;; Display settings ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;

(global-font-lock-mode t)
(setq font-lock-maximum-decoration t)
;; we don't want the tool-bar/menu-bar/time
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
(if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(if (fboundp 'menu-bar-mode) (menu-bar-mode -1))
(blink-cursor-mode -1)

;; custom display time format, and set load average threshold to high
;; number so that we don't see that in the mode line
(setq display-time-load-average-threshold 100
      display-time-format "%a %m/%d %H:%M  ")
(display-time)
;; (display-battery-mode)
(require 'yahoo-weather)
(setq yahoo-weather-location "Bangalore")
(yahoo-weather-mode)

;;
;; Key bindings ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;

(global-set-key "\C-h" 'delete-backward-char)
(global-set-key "\M- " 'set-mark-command)
(global-set-key "\C-w" 'backward-kill-word)
(global-set-key "\C-x\C-k" 'kill-region)
(global-set-key "\C-c\C-k" 'kill-region)
(global-set-key "\M-\C-r" 'query-replace)
(global-set-key "\M-r" 'replace-string)
(global-set-key "\M-g" 'goto-line)
(global-set-key "\M-h" 'help-command)
(global-set-key (kbd "<C-up>") 'shrink-window)
(global-set-key (kbd "<C-down>") 'enlarge-window)
(global-set-key (kbd "<C-right>") 'shrink-window-horizontally)
(global-set-key (kbd "<C-left>") 'enlarge-window-horizontally)
(global-set-key [(control x) (k)] 'kill-this-buffer)
(global-set-key "\C-x\C-m" 'execute-extended-command)
(global-set-key "\C-c\C-m" 'execute-extended-command)
(global-set-key (kbd "<f6>") (lambda() (interactive)(load-file "~/.emacs")))

;;
;; Utility Functions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;

;; custom screen splitting
(defun vsplit-last-buffer ()
  (interactive)
  (split-window-vertically)
  (other-window 1 nil)
  (switch-to-next-buffer)
  )
(defun hsplit-last-buffer ()
  (interactive)
  (split-window-horizontally)
  (other-window 1 nil)
  (switch-to-next-buffer)
  )
(global-set-key (kbd "C-x 2") 'vsplit-last-buffer)
(global-set-key (kbd "C-x 3") 'hsplit-last-buffer)

;; revert buffers
(defun revert-all-buffers ()
  "Refreshes all open buffers from their respective files."
  (interactive)
  (dolist (buf (buffer-list))
    (with-current-buffer buf
      (when (and (buffer-file-name) (not (buffer-modified-p)))
	(revert-buffer t t t) )))
  (message "Refreshed open files."))

(defun insert-date ()
  "Insert date at point."
  (interactive)
  (insert (format-time-string "%a %d %b %Y %H:%M %Z")))

;; Print from emacs
;; need custom command to print directly
;; a2ps -P HP_HP_LaserJet_400_MFP_M425dn -s duplex
(setq ps-printer-name "HP_HP_LaserJet_400_MFP_M425dn"
      ps-printer-name-option "-P"
      ps-lpr-command "a2ps"
      ps-spool-duplex t
      ps-auto-font-detect nil
      ps-print-color-p nil)

;;
;; Misc packages ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(require 'my-pkgs-config)

;;
;; Mail setup ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(require 'my-mailsetup)

;;
;; Settings for programming ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(require 'my-prog-settings)

;; modeline color
;;(set-face-foreground 'mode-line "white")
;;(set-face-background 'mode-line "purple")
;;(set-face-background 'mode-line "sea green")
;; (set-face-background 'mode-line-inactive "light blue")
;;(set-face-background 'mode-line-inactive "gray")

;; eof
